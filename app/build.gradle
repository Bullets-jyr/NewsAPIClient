plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    // https://developer.android.com/training/dependency-injection/hilt-android?hl=ko
    id 'com.google.dagger.hilt.android'
}

android {
    namespace 'kr.co.bullets.newsapiclient'
    compileSdk 33

    defaultConfig {
        applicationId "kr.co.bullets.newsapiclient"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"
        buildConfigField("String", "API_KEY", MY_KEY)
        buildConfigField("String", "BASE_URL", MY_URL)
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            // this will remove the unused classes and methods, ignore the resources that are not called
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    def lifecycle_version = "2.5.1"

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // https://github.com/google/gson
    implementation 'com.google.code.gson:gson:2.10.1'
    // https://github.com/Kotlin/kotlinx.coroutines
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.1")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.1")
    // https://square.github.io/retrofit/
    // https://github.com/square/retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    // https://square.github.io/okhttp/
    implementation("com.squareup.okhttp3:okhttp:4.10.0")
    // https://developer.android.com/jetpack/androidx/releases/lifecycle?hl=ko
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Annotation processor
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // https://developer.android.com/training/dependency-injection/hilt-android?hl=ko
    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-compiler:2.44"

    testImplementation 'junit:junit:4.13.2'

    // https://truth.dev/
    testImplementation "com.google.truth:truth:1.1.3"
    // MockWebServer lets us setup a mock server which will intercept our requests and
    // return whatever mocked response that we want it to return.
    // since it runs in our computer we donâ€™t even need a internet connection to do testing with MockWebServer.
    // we use this to fake API calls for testing purposes.
    // https://github.com/square/okhttp/tree/master/mockwebserver
    testImplementation("com.squareup.okhttp3:mockwebserver:4.11.0")

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}